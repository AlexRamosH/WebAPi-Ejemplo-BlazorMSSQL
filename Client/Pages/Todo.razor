@page "/todoapp"
@using BlazorApp3.Client.Services
@using BlazorApp3.Shared
@using BlazorApp3.Client
@inject ITodoService TodoService
@using System.Diagnostics


<PageTitle>Todo</PageTitle>

<h1>Todo (@todos.Count(todo => !todo.Terminado))</h1>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.Terminado" />
            <input  @bind="todo.Descripcion" />
            <button @onclick="() => delete(todo)">Eliminar</button>
            <button @onclick="() => update(todo)">Actualizar</button>
        </li>
    }
        </ul>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>

@code {
    private List<TodoI> todos = new();
    private string? newTodo;

    private async void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            TodoI nuevo = new TodoI { Descripcion = newTodo };

            todos.Add(nuevo);
            await TodoService.Create(nuevo);
            newTodo = string.Empty;
        }
    }

    async void delete(TodoI todo){
        todos.Remove(todo);
        Debug.WriteLine($"lista: {todos}");
        await TodoService.Delete(todo.Id);
        Debug.WriteLine($"Logging: {todo.Id}");


    }

    async void update(TodoI todo)
    {

        await TodoService.Update(todo);
    }


    protected override async Task OnInitializedAsync()
    {
       todos = await TodoService.GetAll();
    }


}
